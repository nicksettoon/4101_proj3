(define (w x)
    (cond
        ((null? x) (display " "))
        ((pair? x)
            (cond
                ((rational? x)
                    (begin (write (numerator x)) (write '/) (write (denominator x)))
                )
                ((? (car x))
                    (begin (w (car x)) (w (cdr x)))
            )
        )
        (else (write x))
    )
)
(define x 42)
(define (panic? x) (if x (display "Don't.") (display "Good.")))
; (w "asdfasdf")
(w (cons 1 2))
(w '(cons 1 2))
(w (rational 3 2))
(w (cons (rational 2 3) (rational 3 5)))
(w '(rational 3 2))
(w (list 1 2 3 4 5))
(w '(1 2 3 4 5))
(w 1)
(w (* 2 3))
(w panic?)
(w (panic? #t))
(w (panic? #f))
(w x)